// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Match.proto

package com.randioo.box.protocol;

public final class Match {
  private Match() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class MatchCreateGameRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use MatchCreateGameRequest.newBuilder() to construct.
    private MatchCreateGameRequest() {
      initFields();
    }
    private MatchCreateGameRequest(boolean noInit) {}
    
    private static final MatchCreateGameRequest defaultInstance;
    public static MatchCreateGameRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public MatchCreateGameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameRequest_fieldAccessorTable;
    }
    
    // optional .com.randioo.mahjong_public_server.protocol.GameConfigData gameConfigData = 1;
    public static final int GAMECONFIGDATA_FIELD_NUMBER = 1;
    private boolean hasGameConfigData;
    private com.randioo.box.protocol.Entity.GameConfigData gameConfigData_;
    public boolean hasGameConfigData() { return hasGameConfigData; }
    public com.randioo.box.protocol.Entity.GameConfigData getGameConfigData() { return gameConfigData_; }
    
    private void initFields() {
      gameConfigData_ = com.randioo.box.protocol.Entity.GameConfigData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameConfigData()) {
        output.writeMessage(1, getGameConfigData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameConfigData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGameConfigData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.box.protocol.Match.MatchCreateGameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.box.protocol.Match.MatchCreateGameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.box.protocol.Match.MatchCreateGameRequest result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Match.MatchCreateGameRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.box.protocol.Match.MatchCreateGameRequest();
        return builder;
      }
      
      protected com.randioo.box.protocol.Match.MatchCreateGameRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.box.protocol.Match.MatchCreateGameRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.box.protocol.Match.MatchCreateGameRequest.getDescriptor();
      }
      
      public com.randioo.box.protocol.Match.MatchCreateGameRequest getDefaultInstanceForType() {
        return com.randioo.box.protocol.Match.MatchCreateGameRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.box.protocol.Match.MatchCreateGameRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.box.protocol.Match.MatchCreateGameRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.box.protocol.Match.MatchCreateGameRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.box.protocol.Match.MatchCreateGameRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.box.protocol.Match.MatchCreateGameRequest) {
          return mergeFrom((com.randioo.box.protocol.Match.MatchCreateGameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.box.protocol.Match.MatchCreateGameRequest other) {
        if (other == com.randioo.box.protocol.Match.MatchCreateGameRequest.getDefaultInstance()) return this;
        if (other.hasGameConfigData()) {
          mergeGameConfigData(other.getGameConfigData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.box.protocol.Entity.GameConfigData.Builder subBuilder = com.randioo.box.protocol.Entity.GameConfigData.newBuilder();
              if (hasGameConfigData()) {
                subBuilder.mergeFrom(getGameConfigData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameConfigData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.randioo.mahjong_public_server.protocol.GameConfigData gameConfigData = 1;
      public boolean hasGameConfigData() {
        return result.hasGameConfigData();
      }
      public com.randioo.box.protocol.Entity.GameConfigData getGameConfigData() {
        return result.getGameConfigData();
      }
      public Builder setGameConfigData(com.randioo.box.protocol.Entity.GameConfigData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameConfigData = true;
        result.gameConfigData_ = value;
        return this;
      }
      public Builder setGameConfigData(com.randioo.box.protocol.Entity.GameConfigData.Builder builderForValue) {
        result.hasGameConfigData = true;
        result.gameConfigData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameConfigData(com.randioo.box.protocol.Entity.GameConfigData value) {
        if (result.hasGameConfigData() &&
            result.gameConfigData_ != com.randioo.box.protocol.Entity.GameConfigData.getDefaultInstance()) {
          result.gameConfigData_ =
            com.randioo.box.protocol.Entity.GameConfigData.newBuilder(result.gameConfigData_).mergeFrom(value).buildPartial();
        } else {
          result.gameConfigData_ = value;
        }
        result.hasGameConfigData = true;
        return this;
      }
      public Builder clearGameConfigData() {
        result.hasGameConfigData = false;
        result.gameConfigData_ = com.randioo.box.protocol.Entity.GameConfigData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.MatchCreateGameRequest)
    }
    
    static {
      defaultInstance = new MatchCreateGameRequest(true);
      com.randioo.box.protocol.Match.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.MatchCreateGameRequest)
  }
  
  public static final class MatchCreateGameResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use MatchCreateGameResponse.newBuilder() to construct.
    private MatchCreateGameResponse() {
      initFields();
    }
    private MatchCreateGameResponse(boolean noInit) {}
    
    private static final MatchCreateGameResponse defaultInstance;
    public static MatchCreateGameResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public MatchCreateGameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameResponse_fieldAccessorTable;
    }
    
    // optional int32 errorCode = 1 [default = 1];
    public static final int ERRORCODE_FIELD_NUMBER = 1;
    private boolean hasErrorCode;
    private int errorCode_ = 1;
    public boolean hasErrorCode() { return hasErrorCode; }
    public int getErrorCode() { return errorCode_; }
    
    // optional string id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private boolean hasId;
    private java.lang.String id_ = "";
    public boolean hasId() { return hasId; }
    public java.lang.String getId() { return id_; }
    
    // optional bool moguai = 3;
    public static final int MOGUAI_FIELD_NUMBER = 3;
    private boolean hasMoguai;
    private boolean moguai_ = false;
    public boolean hasMoguai() { return hasMoguai; }
    public boolean getMoguai() { return moguai_; }
    
    // optional .com.randioo.mahjong_public_server.protocol.GameRoleData gameRoleData = 4;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 4;
    private boolean hasGameRoleData;
    private com.randioo.box.protocol.Entity.GameRoleData gameRoleData_;
    public boolean hasGameRoleData() { return hasGameRoleData; }
    public com.randioo.box.protocol.Entity.GameRoleData getGameRoleData() { return gameRoleData_; }
    
    private void initFields() {
      gameRoleData_ = com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasErrorCode()) {
        output.writeInt32(1, getErrorCode());
      }
      if (hasId()) {
        output.writeString(2, getId());
      }
      if (hasMoguai()) {
        output.writeBool(3, getMoguai());
      }
      if (hasGameRoleData()) {
        output.writeMessage(4, getGameRoleData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getErrorCode());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getId());
      }
      if (hasMoguai()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getMoguai());
      }
      if (hasGameRoleData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getGameRoleData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.box.protocol.Match.MatchCreateGameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCreateGameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.box.protocol.Match.MatchCreateGameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.box.protocol.Match.MatchCreateGameResponse result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Match.MatchCreateGameResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.box.protocol.Match.MatchCreateGameResponse();
        return builder;
      }
      
      protected com.randioo.box.protocol.Match.MatchCreateGameResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.box.protocol.Match.MatchCreateGameResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.box.protocol.Match.MatchCreateGameResponse.getDescriptor();
      }
      
      public com.randioo.box.protocol.Match.MatchCreateGameResponse getDefaultInstanceForType() {
        return com.randioo.box.protocol.Match.MatchCreateGameResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.box.protocol.Match.MatchCreateGameResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.box.protocol.Match.MatchCreateGameResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.box.protocol.Match.MatchCreateGameResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.box.protocol.Match.MatchCreateGameResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.box.protocol.Match.MatchCreateGameResponse) {
          return mergeFrom((com.randioo.box.protocol.Match.MatchCreateGameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.box.protocol.Match.MatchCreateGameResponse other) {
        if (other == com.randioo.box.protocol.Match.MatchCreateGameResponse.getDefaultInstance()) return this;
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasMoguai()) {
          setMoguai(other.getMoguai());
        }
        if (other.hasGameRoleData()) {
          mergeGameRoleData(other.getGameRoleData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setErrorCode(input.readInt32());
              break;
            }
            case 18: {
              setId(input.readString());
              break;
            }
            case 24: {
              setMoguai(input.readBool());
              break;
            }
            case 34: {
              com.randioo.box.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.box.protocol.Entity.GameRoleData.newBuilder();
              if (hasGameRoleData()) {
                subBuilder.mergeFrom(getGameRoleData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameRoleData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int32 errorCode = 1 [default = 1];
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public int getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 1;
        return this;
      }
      
      // optional string id = 2;
      public boolean hasId() {
        return result.hasId();
      }
      public java.lang.String getId() {
        return result.getId();
      }
      public Builder setId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = getDefaultInstance().getId();
        return this;
      }
      
      // optional bool moguai = 3;
      public boolean hasMoguai() {
        return result.hasMoguai();
      }
      public boolean getMoguai() {
        return result.getMoguai();
      }
      public Builder setMoguai(boolean value) {
        result.hasMoguai = true;
        result.moguai_ = value;
        return this;
      }
      public Builder clearMoguai() {
        result.hasMoguai = false;
        result.moguai_ = false;
        return this;
      }
      
      // optional .com.randioo.mahjong_public_server.protocol.GameRoleData gameRoleData = 4;
      public boolean hasGameRoleData() {
        return result.hasGameRoleData();
      }
      public com.randioo.box.protocol.Entity.GameRoleData getGameRoleData() {
        return result.getGameRoleData();
      }
      public Builder setGameRoleData(com.randioo.box.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameRoleData = true;
        result.gameRoleData_ = value;
        return this;
      }
      public Builder setGameRoleData(com.randioo.box.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.hasGameRoleData = true;
        result.gameRoleData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameRoleData(com.randioo.box.protocol.Entity.GameRoleData value) {
        if (result.hasGameRoleData() &&
            result.gameRoleData_ != com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance()) {
          result.gameRoleData_ =
            com.randioo.box.protocol.Entity.GameRoleData.newBuilder(result.gameRoleData_).mergeFrom(value).buildPartial();
        } else {
          result.gameRoleData_ = value;
        }
        result.hasGameRoleData = true;
        return this;
      }
      public Builder clearGameRoleData() {
        result.hasGameRoleData = false;
        result.gameRoleData_ = com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.MatchCreateGameResponse)
    }
    
    static {
      defaultInstance = new MatchCreateGameResponse(true);
      com.randioo.box.protocol.Match.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.MatchCreateGameResponse)
  }
  
  public static final class MatchJoinGameRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use MatchJoinGameRequest.newBuilder() to construct.
    private MatchJoinGameRequest() {
      initFields();
    }
    private MatchJoinGameRequest(boolean noInit) {}
    
    private static final MatchJoinGameRequest defaultInstance;
    public static MatchJoinGameRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public MatchJoinGameRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameRequest_fieldAccessorTable;
    }
    
    // optional string lockString = 1;
    public static final int LOCKSTRING_FIELD_NUMBER = 1;
    private boolean hasLockString;
    private java.lang.String lockString_ = "";
    public boolean hasLockString() { return hasLockString; }
    public java.lang.String getLockString() { return lockString_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLockString()) {
        output.writeString(1, getLockString());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLockString()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getLockString());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.box.protocol.Match.MatchJoinGameRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.box.protocol.Match.MatchJoinGameRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.box.protocol.Match.MatchJoinGameRequest result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Match.MatchJoinGameRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.box.protocol.Match.MatchJoinGameRequest();
        return builder;
      }
      
      protected com.randioo.box.protocol.Match.MatchJoinGameRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.box.protocol.Match.MatchJoinGameRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.box.protocol.Match.MatchJoinGameRequest.getDescriptor();
      }
      
      public com.randioo.box.protocol.Match.MatchJoinGameRequest getDefaultInstanceForType() {
        return com.randioo.box.protocol.Match.MatchJoinGameRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.box.protocol.Match.MatchJoinGameRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.box.protocol.Match.MatchJoinGameRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.box.protocol.Match.MatchJoinGameRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.box.protocol.Match.MatchJoinGameRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.box.protocol.Match.MatchJoinGameRequest) {
          return mergeFrom((com.randioo.box.protocol.Match.MatchJoinGameRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.box.protocol.Match.MatchJoinGameRequest other) {
        if (other == com.randioo.box.protocol.Match.MatchJoinGameRequest.getDefaultInstance()) return this;
        if (other.hasLockString()) {
          setLockString(other.getLockString());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setLockString(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string lockString = 1;
      public boolean hasLockString() {
        return result.hasLockString();
      }
      public java.lang.String getLockString() {
        return result.getLockString();
      }
      public Builder setLockString(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLockString = true;
        result.lockString_ = value;
        return this;
      }
      public Builder clearLockString() {
        result.hasLockString = false;
        result.lockString_ = getDefaultInstance().getLockString();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.MatchJoinGameRequest)
    }
    
    static {
      defaultInstance = new MatchJoinGameRequest(true);
      com.randioo.box.protocol.Match.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.MatchJoinGameRequest)
  }
  
  public static final class MatchJoinGameResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use MatchJoinGameResponse.newBuilder() to construct.
    private MatchJoinGameResponse() {
      initFields();
    }
    private MatchJoinGameResponse(boolean noInit) {}
    
    private static final MatchJoinGameResponse defaultInstance;
    public static MatchJoinGameResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public MatchJoinGameResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameResponse_fieldAccessorTable;
    }
    
    // optional int32 errorCode = 1 [default = 1];
    public static final int ERRORCODE_FIELD_NUMBER = 1;
    private boolean hasErrorCode;
    private int errorCode_ = 1;
    public boolean hasErrorCode() { return hasErrorCode; }
    public int getErrorCode() { return errorCode_; }
    
    // optional .com.randioo.mahjong_public_server.protocol.RoundVideoData RoundVideoData = 2;
    public static final int ROUNDVIDEODATA_FIELD_NUMBER = 2;
    private boolean hasRoundVideoData;
    private com.randioo.box.protocol.Entity.RoundVideoData roundVideoData_;
    public boolean hasRoundVideoData() { return hasRoundVideoData; }
    public com.randioo.box.protocol.Entity.RoundVideoData getRoundVideoData() { return roundVideoData_; }
    
    // optional string roomId = 3;
    public static final int ROOMID_FIELD_NUMBER = 3;
    private boolean hasRoomId;
    private java.lang.String roomId_ = "";
    public boolean hasRoomId() { return hasRoomId; }
    public java.lang.String getRoomId() { return roomId_; }
    
    private void initFields() {
      roundVideoData_ = com.randioo.box.protocol.Entity.RoundVideoData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasErrorCode()) {
        output.writeInt32(1, getErrorCode());
      }
      if (hasRoundVideoData()) {
        output.writeMessage(2, getRoundVideoData());
      }
      if (hasRoomId()) {
        output.writeString(3, getRoomId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasErrorCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getErrorCode());
      }
      if (hasRoundVideoData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRoundVideoData());
      }
      if (hasRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getRoomId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.box.protocol.Match.MatchJoinGameResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchJoinGameResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.box.protocol.Match.MatchJoinGameResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.box.protocol.Match.MatchJoinGameResponse result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Match.MatchJoinGameResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.box.protocol.Match.MatchJoinGameResponse();
        return builder;
      }
      
      protected com.randioo.box.protocol.Match.MatchJoinGameResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.box.protocol.Match.MatchJoinGameResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.box.protocol.Match.MatchJoinGameResponse.getDescriptor();
      }
      
      public com.randioo.box.protocol.Match.MatchJoinGameResponse getDefaultInstanceForType() {
        return com.randioo.box.protocol.Match.MatchJoinGameResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.box.protocol.Match.MatchJoinGameResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.box.protocol.Match.MatchJoinGameResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.box.protocol.Match.MatchJoinGameResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.box.protocol.Match.MatchJoinGameResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.box.protocol.Match.MatchJoinGameResponse) {
          return mergeFrom((com.randioo.box.protocol.Match.MatchJoinGameResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.box.protocol.Match.MatchJoinGameResponse other) {
        if (other == com.randioo.box.protocol.Match.MatchJoinGameResponse.getDefaultInstance()) return this;
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        if (other.hasRoundVideoData()) {
          mergeRoundVideoData(other.getRoundVideoData());
        }
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setErrorCode(input.readInt32());
              break;
            }
            case 18: {
              com.randioo.box.protocol.Entity.RoundVideoData.Builder subBuilder = com.randioo.box.protocol.Entity.RoundVideoData.newBuilder();
              if (hasRoundVideoData()) {
                subBuilder.mergeFrom(getRoundVideoData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRoundVideoData(subBuilder.buildPartial());
              break;
            }
            case 26: {
              setRoomId(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional int32 errorCode = 1 [default = 1];
      public boolean hasErrorCode() {
        return result.hasErrorCode();
      }
      public int getErrorCode() {
        return result.getErrorCode();
      }
      public Builder setErrorCode(int value) {
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder clearErrorCode() {
        result.hasErrorCode = false;
        result.errorCode_ = 1;
        return this;
      }
      
      // optional .com.randioo.mahjong_public_server.protocol.RoundVideoData RoundVideoData = 2;
      public boolean hasRoundVideoData() {
        return result.hasRoundVideoData();
      }
      public com.randioo.box.protocol.Entity.RoundVideoData getRoundVideoData() {
        return result.getRoundVideoData();
      }
      public Builder setRoundVideoData(com.randioo.box.protocol.Entity.RoundVideoData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRoundVideoData = true;
        result.roundVideoData_ = value;
        return this;
      }
      public Builder setRoundVideoData(com.randioo.box.protocol.Entity.RoundVideoData.Builder builderForValue) {
        result.hasRoundVideoData = true;
        result.roundVideoData_ = builderForValue.build();
        return this;
      }
      public Builder mergeRoundVideoData(com.randioo.box.protocol.Entity.RoundVideoData value) {
        if (result.hasRoundVideoData() &&
            result.roundVideoData_ != com.randioo.box.protocol.Entity.RoundVideoData.getDefaultInstance()) {
          result.roundVideoData_ =
            com.randioo.box.protocol.Entity.RoundVideoData.newBuilder(result.roundVideoData_).mergeFrom(value).buildPartial();
        } else {
          result.roundVideoData_ = value;
        }
        result.hasRoundVideoData = true;
        return this;
      }
      public Builder clearRoundVideoData() {
        result.hasRoundVideoData = false;
        result.roundVideoData_ = com.randioo.box.protocol.Entity.RoundVideoData.getDefaultInstance();
        return this;
      }
      
      // optional string roomId = 3;
      public boolean hasRoomId() {
        return result.hasRoomId();
      }
      public java.lang.String getRoomId() {
        return result.getRoomId();
      }
      public Builder setRoomId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder clearRoomId() {
        result.hasRoomId = false;
        result.roomId_ = getDefaultInstance().getRoomId();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.MatchJoinGameResponse)
    }
    
    static {
      defaultInstance = new MatchJoinGameResponse(true);
      com.randioo.box.protocol.Match.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.MatchJoinGameResponse)
  }
  
  public static final class SCMatchJoinGame extends
      com.google.protobuf.GeneratedMessage {
    // Use SCMatchJoinGame.newBuilder() to construct.
    private SCMatchJoinGame() {
      initFields();
    }
    private SCMatchJoinGame(boolean noInit) {}
    
    private static final SCMatchJoinGame defaultInstance;
    public static SCMatchJoinGame getDefaultInstance() {
      return defaultInstance;
    }
    
    public SCMatchJoinGame getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_SCMatchJoinGame_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_SCMatchJoinGame_fieldAccessorTable;
    }
    
    // optional .com.randioo.mahjong_public_server.protocol.GameRoleData gameRoleData = 1;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 1;
    private boolean hasGameRoleData;
    private com.randioo.box.protocol.Entity.GameRoleData gameRoleData_;
    public boolean hasGameRoleData() { return hasGameRoleData; }
    public com.randioo.box.protocol.Entity.GameRoleData getGameRoleData() { return gameRoleData_; }
    
    // optional bool isMe = 2;
    public static final int ISME_FIELD_NUMBER = 2;
    private boolean hasIsMe;
    private boolean isMe_ = false;
    public boolean hasIsMe() { return hasIsMe; }
    public boolean getIsMe() { return isMe_; }
    
    private void initFields() {
      gameRoleData_ = com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameRoleData()) {
        output.writeMessage(1, getGameRoleData());
      }
      if (hasIsMe()) {
        output.writeBool(2, getIsMe());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameRoleData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGameRoleData());
      }
      if (hasIsMe()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getIsMe());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.box.protocol.Match.SCMatchJoinGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchJoinGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchJoinGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchJoinGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchJoinGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchJoinGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchJoinGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.SCMatchJoinGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.SCMatchJoinGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchJoinGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.box.protocol.Match.SCMatchJoinGame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.box.protocol.Match.SCMatchJoinGame result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Match.SCMatchJoinGame.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.box.protocol.Match.SCMatchJoinGame();
        return builder;
      }
      
      protected com.randioo.box.protocol.Match.SCMatchJoinGame internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.box.protocol.Match.SCMatchJoinGame();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.box.protocol.Match.SCMatchJoinGame.getDescriptor();
      }
      
      public com.randioo.box.protocol.Match.SCMatchJoinGame getDefaultInstanceForType() {
        return com.randioo.box.protocol.Match.SCMatchJoinGame.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.box.protocol.Match.SCMatchJoinGame build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.box.protocol.Match.SCMatchJoinGame buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.box.protocol.Match.SCMatchJoinGame buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.box.protocol.Match.SCMatchJoinGame returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.box.protocol.Match.SCMatchJoinGame) {
          return mergeFrom((com.randioo.box.protocol.Match.SCMatchJoinGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.box.protocol.Match.SCMatchJoinGame other) {
        if (other == com.randioo.box.protocol.Match.SCMatchJoinGame.getDefaultInstance()) return this;
        if (other.hasGameRoleData()) {
          mergeGameRoleData(other.getGameRoleData());
        }
        if (other.hasIsMe()) {
          setIsMe(other.getIsMe());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.box.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.box.protocol.Entity.GameRoleData.newBuilder();
              if (hasGameRoleData()) {
                subBuilder.mergeFrom(getGameRoleData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameRoleData(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setIsMe(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional .com.randioo.mahjong_public_server.protocol.GameRoleData gameRoleData = 1;
      public boolean hasGameRoleData() {
        return result.hasGameRoleData();
      }
      public com.randioo.box.protocol.Entity.GameRoleData getGameRoleData() {
        return result.getGameRoleData();
      }
      public Builder setGameRoleData(com.randioo.box.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameRoleData = true;
        result.gameRoleData_ = value;
        return this;
      }
      public Builder setGameRoleData(com.randioo.box.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.hasGameRoleData = true;
        result.gameRoleData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameRoleData(com.randioo.box.protocol.Entity.GameRoleData value) {
        if (result.hasGameRoleData() &&
            result.gameRoleData_ != com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance()) {
          result.gameRoleData_ =
            com.randioo.box.protocol.Entity.GameRoleData.newBuilder(result.gameRoleData_).mergeFrom(value).buildPartial();
        } else {
          result.gameRoleData_ = value;
        }
        result.hasGameRoleData = true;
        return this;
      }
      public Builder clearGameRoleData() {
        result.hasGameRoleData = false;
        result.gameRoleData_ = com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance();
        return this;
      }
      
      // optional bool isMe = 2;
      public boolean hasIsMe() {
        return result.hasIsMe();
      }
      public boolean getIsMe() {
        return result.getIsMe();
      }
      public Builder setIsMe(boolean value) {
        result.hasIsMe = true;
        result.isMe_ = value;
        return this;
      }
      public Builder clearIsMe() {
        result.hasIsMe = false;
        result.isMe_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.SCMatchJoinGame)
    }
    
    static {
      defaultInstance = new SCMatchJoinGame(true);
      com.randioo.box.protocol.Match.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.SCMatchJoinGame)
  }
  
  public static final class SCMatchMineInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use SCMatchMineInfo.newBuilder() to construct.
    private SCMatchMineInfo() {
      initFields();
    }
    private SCMatchMineInfo(boolean noInit) {}
    
    private static final SCMatchMineInfo defaultInstance;
    public static SCMatchMineInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public SCMatchMineInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_SCMatchMineInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_SCMatchMineInfo_fieldAccessorTable;
    }
    
    // optional .com.randioo.mahjong_public_server.protocol.GameRoleData gameRoleData = 1;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 1;
    private boolean hasGameRoleData;
    private com.randioo.box.protocol.Entity.GameRoleData gameRoleData_;
    public boolean hasGameRoleData() { return hasGameRoleData; }
    public com.randioo.box.protocol.Entity.GameRoleData getGameRoleData() { return gameRoleData_; }
    
    private void initFields() {
      gameRoleData_ = com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameRoleData()) {
        output.writeMessage(1, getGameRoleData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameRoleData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGameRoleData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.box.protocol.Match.SCMatchMineInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchMineInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchMineInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchMineInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchMineInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchMineInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchMineInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.SCMatchMineInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.SCMatchMineInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchMineInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.box.protocol.Match.SCMatchMineInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.box.protocol.Match.SCMatchMineInfo result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Match.SCMatchMineInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.box.protocol.Match.SCMatchMineInfo();
        return builder;
      }
      
      protected com.randioo.box.protocol.Match.SCMatchMineInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.box.protocol.Match.SCMatchMineInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.box.protocol.Match.SCMatchMineInfo.getDescriptor();
      }
      
      public com.randioo.box.protocol.Match.SCMatchMineInfo getDefaultInstanceForType() {
        return com.randioo.box.protocol.Match.SCMatchMineInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.box.protocol.Match.SCMatchMineInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.box.protocol.Match.SCMatchMineInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.box.protocol.Match.SCMatchMineInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.box.protocol.Match.SCMatchMineInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.box.protocol.Match.SCMatchMineInfo) {
          return mergeFrom((com.randioo.box.protocol.Match.SCMatchMineInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.box.protocol.Match.SCMatchMineInfo other) {
        if (other == com.randioo.box.protocol.Match.SCMatchMineInfo.getDefaultInstance()) return this;
        if (other.hasGameRoleData()) {
          mergeGameRoleData(other.getGameRoleData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.box.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.box.protocol.Entity.GameRoleData.newBuilder();
              if (hasGameRoleData()) {
                subBuilder.mergeFrom(getGameRoleData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameRoleData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.randioo.mahjong_public_server.protocol.GameRoleData gameRoleData = 1;
      public boolean hasGameRoleData() {
        return result.hasGameRoleData();
      }
      public com.randioo.box.protocol.Entity.GameRoleData getGameRoleData() {
        return result.getGameRoleData();
      }
      public Builder setGameRoleData(com.randioo.box.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameRoleData = true;
        result.gameRoleData_ = value;
        return this;
      }
      public Builder setGameRoleData(com.randioo.box.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.hasGameRoleData = true;
        result.gameRoleData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameRoleData(com.randioo.box.protocol.Entity.GameRoleData value) {
        if (result.hasGameRoleData() &&
            result.gameRoleData_ != com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance()) {
          result.gameRoleData_ =
            com.randioo.box.protocol.Entity.GameRoleData.newBuilder(result.gameRoleData_).mergeFrom(value).buildPartial();
        } else {
          result.gameRoleData_ = value;
        }
        result.hasGameRoleData = true;
        return this;
      }
      public Builder clearGameRoleData() {
        result.hasGameRoleData = false;
        result.gameRoleData_ = com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.SCMatchMineInfo)
    }
    
    static {
      defaultInstance = new SCMatchMineInfo(true);
      com.randioo.box.protocol.Match.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.SCMatchMineInfo)
  }
  
  public static final class SCMatchCreateGame extends
      com.google.protobuf.GeneratedMessage {
    // Use SCMatchCreateGame.newBuilder() to construct.
    private SCMatchCreateGame() {
      initFields();
    }
    private SCMatchCreateGame(boolean noInit) {}
    
    private static final SCMatchCreateGame defaultInstance;
    public static SCMatchCreateGame getDefaultInstance() {
      return defaultInstance;
    }
    
    public SCMatchCreateGame getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_SCMatchCreateGame_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_SCMatchCreateGame_fieldAccessorTable;
    }
    
    // optional string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomId;
    private java.lang.String roomId_ = "";
    public boolean hasRoomId() { return hasRoomId; }
    public java.lang.String getRoomId() { return roomId_; }
    
    // optional int32 roomType = 2;
    public static final int ROOMTYPE_FIELD_NUMBER = 2;
    private boolean hasRoomType;
    private int roomType_ = 0;
    public boolean hasRoomType() { return hasRoomType; }
    public int getRoomType() { return roomType_; }
    
    // optional int32 roundNum = 3;
    public static final int ROUNDNUM_FIELD_NUMBER = 3;
    private boolean hasRoundNum;
    private int roundNum_ = 0;
    public boolean hasRoundNum() { return hasRoundNum; }
    public int getRoundNum() { return roundNum_; }
    
    // optional .com.randioo.mahjong_public_server.protocol.GameRoleData gameRoleData = 4;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 4;
    private boolean hasGameRoleData;
    private com.randioo.box.protocol.Entity.GameRoleData gameRoleData_;
    public boolean hasGameRoleData() { return hasGameRoleData; }
    public com.randioo.box.protocol.Entity.GameRoleData getGameRoleData() { return gameRoleData_; }
    
    private void initFields() {
      gameRoleData_ = com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoomId()) {
        output.writeString(1, getRoomId());
      }
      if (hasRoomType()) {
        output.writeInt32(2, getRoomType());
      }
      if (hasRoundNum()) {
        output.writeInt32(3, getRoundNum());
      }
      if (hasGameRoleData()) {
        output.writeMessage(4, getGameRoleData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getRoomId());
      }
      if (hasRoomType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getRoomType());
      }
      if (hasRoundNum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getRoundNum());
      }
      if (hasGameRoleData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getGameRoleData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.box.protocol.Match.SCMatchCreateGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchCreateGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchCreateGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchCreateGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchCreateGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchCreateGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchCreateGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.SCMatchCreateGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.SCMatchCreateGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.SCMatchCreateGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.box.protocol.Match.SCMatchCreateGame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.box.protocol.Match.SCMatchCreateGame result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Match.SCMatchCreateGame.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.box.protocol.Match.SCMatchCreateGame();
        return builder;
      }
      
      protected com.randioo.box.protocol.Match.SCMatchCreateGame internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.box.protocol.Match.SCMatchCreateGame();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.box.protocol.Match.SCMatchCreateGame.getDescriptor();
      }
      
      public com.randioo.box.protocol.Match.SCMatchCreateGame getDefaultInstanceForType() {
        return com.randioo.box.protocol.Match.SCMatchCreateGame.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.box.protocol.Match.SCMatchCreateGame build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.box.protocol.Match.SCMatchCreateGame buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.box.protocol.Match.SCMatchCreateGame buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.box.protocol.Match.SCMatchCreateGame returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.box.protocol.Match.SCMatchCreateGame) {
          return mergeFrom((com.randioo.box.protocol.Match.SCMatchCreateGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.box.protocol.Match.SCMatchCreateGame other) {
        if (other == com.randioo.box.protocol.Match.SCMatchCreateGame.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasRoomType()) {
          setRoomType(other.getRoomType());
        }
        if (other.hasRoundNum()) {
          setRoundNum(other.getRoundNum());
        }
        if (other.hasGameRoleData()) {
          mergeGameRoleData(other.getGameRoleData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setRoomId(input.readString());
              break;
            }
            case 16: {
              setRoomType(input.readInt32());
              break;
            }
            case 24: {
              setRoundNum(input.readInt32());
              break;
            }
            case 34: {
              com.randioo.box.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.box.protocol.Entity.GameRoleData.newBuilder();
              if (hasGameRoleData()) {
                subBuilder.mergeFrom(getGameRoleData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameRoleData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string roomId = 1;
      public boolean hasRoomId() {
        return result.hasRoomId();
      }
      public java.lang.String getRoomId() {
        return result.getRoomId();
      }
      public Builder setRoomId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder clearRoomId() {
        result.hasRoomId = false;
        result.roomId_ = getDefaultInstance().getRoomId();
        return this;
      }
      
      // optional int32 roomType = 2;
      public boolean hasRoomType() {
        return result.hasRoomType();
      }
      public int getRoomType() {
        return result.getRoomType();
      }
      public Builder setRoomType(int value) {
        result.hasRoomType = true;
        result.roomType_ = value;
        return this;
      }
      public Builder clearRoomType() {
        result.hasRoomType = false;
        result.roomType_ = 0;
        return this;
      }
      
      // optional int32 roundNum = 3;
      public boolean hasRoundNum() {
        return result.hasRoundNum();
      }
      public int getRoundNum() {
        return result.getRoundNum();
      }
      public Builder setRoundNum(int value) {
        result.hasRoundNum = true;
        result.roundNum_ = value;
        return this;
      }
      public Builder clearRoundNum() {
        result.hasRoundNum = false;
        result.roundNum_ = 0;
        return this;
      }
      
      // optional .com.randioo.mahjong_public_server.protocol.GameRoleData gameRoleData = 4;
      public boolean hasGameRoleData() {
        return result.hasGameRoleData();
      }
      public com.randioo.box.protocol.Entity.GameRoleData getGameRoleData() {
        return result.getGameRoleData();
      }
      public Builder setGameRoleData(com.randioo.box.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameRoleData = true;
        result.gameRoleData_ = value;
        return this;
      }
      public Builder setGameRoleData(com.randioo.box.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.hasGameRoleData = true;
        result.gameRoleData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameRoleData(com.randioo.box.protocol.Entity.GameRoleData value) {
        if (result.hasGameRoleData() &&
            result.gameRoleData_ != com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance()) {
          result.gameRoleData_ =
            com.randioo.box.protocol.Entity.GameRoleData.newBuilder(result.gameRoleData_).mergeFrom(value).buildPartial();
        } else {
          result.gameRoleData_ = value;
        }
        result.hasGameRoleData = true;
        return this;
      }
      public Builder clearGameRoleData() {
        result.hasGameRoleData = false;
        result.gameRoleData_ = com.randioo.box.protocol.Entity.GameRoleData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.SCMatchCreateGame)
    }
    
    static {
      defaultInstance = new SCMatchCreateGame(true);
      com.randioo.box.protocol.Match.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.SCMatchCreateGame)
  }
  
  public static final class MatchCheckRoomRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use MatchCheckRoomRequest.newBuilder() to construct.
    private MatchCheckRoomRequest() {
      initFields();
    }
    private MatchCheckRoomRequest(boolean noInit) {}
    
    private static final MatchCheckRoomRequest defaultInstance;
    public static MatchCheckRoomRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public MatchCheckRoomRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomRequest_fieldAccessorTable;
    }
    
    // optional string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private boolean hasRoomId;
    private java.lang.String roomId_ = "";
    public boolean hasRoomId() { return hasRoomId; }
    public java.lang.String getRoomId() { return roomId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoomId()) {
        output.writeString(1, getRoomId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoomId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getRoomId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.box.protocol.Match.MatchCheckRoomRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.box.protocol.Match.MatchCheckRoomRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.box.protocol.Match.MatchCheckRoomRequest result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Match.MatchCheckRoomRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.box.protocol.Match.MatchCheckRoomRequest();
        return builder;
      }
      
      protected com.randioo.box.protocol.Match.MatchCheckRoomRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.box.protocol.Match.MatchCheckRoomRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.box.protocol.Match.MatchCheckRoomRequest.getDescriptor();
      }
      
      public com.randioo.box.protocol.Match.MatchCheckRoomRequest getDefaultInstanceForType() {
        return com.randioo.box.protocol.Match.MatchCheckRoomRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.box.protocol.Match.MatchCheckRoomRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.box.protocol.Match.MatchCheckRoomRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.box.protocol.Match.MatchCheckRoomRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.box.protocol.Match.MatchCheckRoomRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.box.protocol.Match.MatchCheckRoomRequest) {
          return mergeFrom((com.randioo.box.protocol.Match.MatchCheckRoomRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.box.protocol.Match.MatchCheckRoomRequest other) {
        if (other == com.randioo.box.protocol.Match.MatchCheckRoomRequest.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setRoomId(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string roomId = 1;
      public boolean hasRoomId() {
        return result.hasRoomId();
      }
      public java.lang.String getRoomId() {
        return result.getRoomId();
      }
      public Builder setRoomId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRoomId = true;
        result.roomId_ = value;
        return this;
      }
      public Builder clearRoomId() {
        result.hasRoomId = false;
        result.roomId_ = getDefaultInstance().getRoomId();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.MatchCheckRoomRequest)
    }
    
    static {
      defaultInstance = new MatchCheckRoomRequest(true);
      com.randioo.box.protocol.Match.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.MatchCheckRoomRequest)
  }
  
  public static final class MatchCheckRoomResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use MatchCheckRoomResponse.newBuilder() to construct.
    private MatchCheckRoomResponse() {
      initFields();
    }
    private MatchCheckRoomResponse(boolean noInit) {}
    
    private static final MatchCheckRoomResponse defaultInstance;
    public static MatchCheckRoomResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public MatchCheckRoomResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.box.protocol.Match.internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomResponse_fieldAccessorTable;
    }
    
    // optional bool exist = 1;
    public static final int EXIST_FIELD_NUMBER = 1;
    private boolean hasExist;
    private boolean exist_ = false;
    public boolean hasExist() { return hasExist; }
    public boolean getExist() { return exist_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasExist()) {
        output.writeBool(1, getExist());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasExist()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getExist());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.box.protocol.Match.MatchCheckRoomResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.box.protocol.Match.MatchCheckRoomResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.box.protocol.Match.MatchCheckRoomResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.box.protocol.Match.MatchCheckRoomResponse result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Match.MatchCheckRoomResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.box.protocol.Match.MatchCheckRoomResponse();
        return builder;
      }
      
      protected com.randioo.box.protocol.Match.MatchCheckRoomResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.box.protocol.Match.MatchCheckRoomResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.box.protocol.Match.MatchCheckRoomResponse.getDescriptor();
      }
      
      public com.randioo.box.protocol.Match.MatchCheckRoomResponse getDefaultInstanceForType() {
        return com.randioo.box.protocol.Match.MatchCheckRoomResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.box.protocol.Match.MatchCheckRoomResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.box.protocol.Match.MatchCheckRoomResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.box.protocol.Match.MatchCheckRoomResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.box.protocol.Match.MatchCheckRoomResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.box.protocol.Match.MatchCheckRoomResponse) {
          return mergeFrom((com.randioo.box.protocol.Match.MatchCheckRoomResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.box.protocol.Match.MatchCheckRoomResponse other) {
        if (other == com.randioo.box.protocol.Match.MatchCheckRoomResponse.getDefaultInstance()) return this;
        if (other.hasExist()) {
          setExist(other.getExist());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setExist(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional bool exist = 1;
      public boolean hasExist() {
        return result.hasExist();
      }
      public boolean getExist() {
        return result.getExist();
      }
      public Builder setExist(boolean value) {
        result.hasExist = true;
        result.exist_ = value;
        return this;
      }
      public Builder clearExist() {
        result.hasExist = false;
        result.exist_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.MatchCheckRoomResponse)
    }
    
    static {
      defaultInstance = new MatchCheckRoomResponse(true);
      com.randioo.box.protocol.Match.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.MatchCheckRoomResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_SCMatchJoinGame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_SCMatchJoinGame_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_SCMatchMineInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_SCMatchMineInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_SCMatchCreateGame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_SCMatchCreateGame_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Match.proto\022*com.randioo.mahjong_publi" +
      "c_server.protocol\032\014Entity.proto\"l\n\026Match" +
      "CreateGameRequest\022R\n\016gameConfigData\030\001 \001(" +
      "\0132:.com.randioo.mahjong_public_server.pr" +
      "otocol.GameConfigData\"\233\001\n\027MatchCreateGam" +
      "eResponse\022\024\n\terrorCode\030\001 \001(\005:\0011\022\n\n\002id\030\002 " +
      "\001(\t\022\016\n\006moguai\030\003 \001(\010\022N\n\014gameRoleData\030\004 \001(" +
      "\01328.com.randioo.mahjong_public_server.pr" +
      "otocol.GameRoleData\"*\n\024MatchJoinGameRequ" +
      "est\022\022\n\nlockString\030\001 \001(\t\"\221\001\n\025MatchJoinGam",
      "eResponse\022\024\n\terrorCode\030\001 \001(\005:\0011\022R\n\016Round" +
      "VideoData\030\002 \001(\0132:.com.randioo.mahjong_pu" +
      "blic_server.protocol.RoundVideoData\022\016\n\006r" +
      "oomId\030\003 \001(\t\"o\n\017SCMatchJoinGame\022N\n\014gameRo" +
      "leData\030\001 \001(\01328.com.randioo.mahjong_publi" +
      "c_server.protocol.GameRoleData\022\014\n\004isMe\030\002" +
      " \001(\010\"a\n\017SCMatchMineInfo\022N\n\014gameRoleData\030" +
      "\001 \001(\01328.com.randioo.mahjong_public_serve" +
      "r.protocol.GameRoleData\"\227\001\n\021SCMatchCreat" +
      "eGame\022\016\n\006roomId\030\001 \001(\t\022\020\n\010roomType\030\002 \001(\005\022",
      "\020\n\010roundNum\030\003 \001(\005\022N\n\014gameRoleData\030\004 \001(\0132" +
      "8.com.randioo.mahjong_public_server.prot" +
      "ocol.GameRoleData\"\'\n\025MatchCheckRoomReque" +
      "st\022\016\n\006roomId\030\001 \001(\t\"\'\n\026MatchCheckRoomResp" +
      "onse\022\r\n\005exist\030\001 \001(\010"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameRequest_descriptor,
              new java.lang.String[] { "GameConfigData", },
              com.randioo.box.protocol.Match.MatchCreateGameRequest.class,
              com.randioo.box.protocol.Match.MatchCreateGameRequest.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_MatchCreateGameResponse_descriptor,
              new java.lang.String[] { "ErrorCode", "Id", "Moguai", "GameRoleData", },
              com.randioo.box.protocol.Match.MatchCreateGameResponse.class,
              com.randioo.box.protocol.Match.MatchCreateGameResponse.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameRequest_descriptor,
              new java.lang.String[] { "LockString", },
              com.randioo.box.protocol.Match.MatchJoinGameRequest.class,
              com.randioo.box.protocol.Match.MatchJoinGameRequest.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_MatchJoinGameResponse_descriptor,
              new java.lang.String[] { "ErrorCode", "RoundVideoData", "RoomId", },
              com.randioo.box.protocol.Match.MatchJoinGameResponse.class,
              com.randioo.box.protocol.Match.MatchJoinGameResponse.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_SCMatchJoinGame_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_randioo_mahjong_public_server_protocol_SCMatchJoinGame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_SCMatchJoinGame_descriptor,
              new java.lang.String[] { "GameRoleData", "IsMe", },
              com.randioo.box.protocol.Match.SCMatchJoinGame.class,
              com.randioo.box.protocol.Match.SCMatchJoinGame.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_SCMatchMineInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_randioo_mahjong_public_server_protocol_SCMatchMineInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_SCMatchMineInfo_descriptor,
              new java.lang.String[] { "GameRoleData", },
              com.randioo.box.protocol.Match.SCMatchMineInfo.class,
              com.randioo.box.protocol.Match.SCMatchMineInfo.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_SCMatchCreateGame_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_randioo_mahjong_public_server_protocol_SCMatchCreateGame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_SCMatchCreateGame_descriptor,
              new java.lang.String[] { "RoomId", "RoomType", "RoundNum", "GameRoleData", },
              com.randioo.box.protocol.Match.SCMatchCreateGame.class,
              com.randioo.box.protocol.Match.SCMatchCreateGame.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomRequest_descriptor,
              new java.lang.String[] { "RoomId", },
              com.randioo.box.protocol.Match.MatchCheckRoomRequest.class,
              com.randioo.box.protocol.Match.MatchCheckRoomRequest.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomResponse_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_MatchCheckRoomResponse_descriptor,
              new java.lang.String[] { "Exist", },
              com.randioo.box.protocol.Match.MatchCheckRoomResponse.class,
              com.randioo.box.protocol.Match.MatchCheckRoomResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.randioo.box.protocol.Entity.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
